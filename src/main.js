/* src/main.js ‚Äì –ø–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è -------------------------------------------- */

import { initRouter }                     from '@/router';
import { getLang, setLang, onLangChange } from '@/i18n';
import { logout }                         from '@/store';
import { navigate } from '@/router';
import { showConfirmModal } from '@/components/modal.js';

if (!localStorage.getItem('lang')) setLang('ru');

if (import.meta.env.DEV && !import.meta.env.REAL_API) {
  const { setupMockServer } = await import('/mock/server.js');
  setupMockServer();
}

/* ---------- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---------- */
renderControlPanel();
initRouter();

/* ---------- –ø–∞–Ω–µ–ª—å –≤ –ø—Ä–∞–≤–æ–º-–≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É ---------- */
function renderControlPanel() {
  const backBtn = document.createElement('button');
  backBtn.id = 'back-btn';
  backBtn.className = 'global-back-btn';
  backBtn.title = '–ù–∞–∑–∞–¥';
  backBtn.innerHTML = '‚Üê';
  document.body.append(backBtn);

  const panel = document.createElement('div');
  panel.className = 'control-panel';
  panel.innerHTML = `
    <button id="home-btn"   title="–ù–∞ –≥–ª–∞–≤–Ω—É—é">üè†</button>
    <button id="theme-btn"  title="–°–º–µ–Ω–∞ —Ç–µ–º—ã">üåì</button>
    <button id="lang-btn"   title="–°–º–µ–Ω–∞ —è–∑—ã–∫–∞"></button>
    <button id="logout-btn" title="–í—ã–π—Ç–∏">üö™</button>
  `;
  document.body.append(panel);

  function updatePanel(){
    const path = window.location.pathname;
    const isLoginOrDashboard = (path === '/login' || path === '/');
    document.getElementById('back-btn' ).style.display = isLoginOrDashboard ? 'none' : 'block';
    document.getElementById('logout-btn').style.display = path === '/login' ? 'none' : 'inline-block';
  }
  updatePanel();
  window.addEventListener('popstate', updatePanel);
  window.addEventListener('va-update-panel', updatePanel);
  onLangChange(updatePanel);

  /* —è–∑—ã–∫ */
  const $lang = document.getElementById('lang-btn');
  const applyLangTxt = () => { $lang.textContent = getLang() === 'ru' ? 'RU' : 'EN'; };
  applyLangTxt();
  $lang.onclick = () => { setLang(getLang() === 'ru' ? 'en' : 'ru'); };
  onLangChange(applyLangTxt);

  /* —Ç–µ–º–∞ */
  const $theme = document.getElementById('theme-btn');
  if (localStorage.getItem('theme') === 'dark')
    document.documentElement.dataset.theme = 'dark';
  $theme.onclick = () => {
    const html = document.documentElement;
    const next = html.dataset.theme === 'dark' ? 'light' : 'dark';
    html.dataset.theme = next;
    localStorage.setItem('theme', next);
  };

  /* –≤—ã—Ö–æ–¥ */
  document.getElementById('logout-btn').onclick = () => {
    showConfirmModal(
      '–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞?',
      () => logout(),
      () => {} // –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
    );
  };

  /* –Ω–∞ –≥–ª–∞–≤–Ω—É—é */
  document.getElementById('home-btn').onclick = () => navigate('/');

  /* –Ω–∞–∑–∞–¥ */
  document.getElementById('back-btn').onclick = () => history.back();
}
